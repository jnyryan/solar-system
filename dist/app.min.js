var Earth, GridObject, Planet, Sun,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

GridObject = (function() {
  function GridObject(scene) {
    var geometry, i, line, material, size, step;
    size = 500;
    step = 50;
    geometry = new THREE.Geometry;
    i = -size;
    while (i <= size) {
      geometry.vertices.push(new THREE.Vector3(-size, -100, i));
      geometry.vertices.push(new THREE.Vector3(size, -100, i));
      geometry.vertices.push(new THREE.Vector3(i, -100, -size));
      geometry.vertices.push(new THREE.Vector3(i, -100, size));
      i += step;
    }
    material = new THREE.LineBasicMaterial({
      color: 0xffffff,
      opacity: 0.2
    });
    line = new THREE.LineSegments(geometry, material);
    scene.add(line);
  }

  return GridObject;

})();

Planet = (function() {
  function Planet(scene1) {
    this.scene = scene1;
    this.drawPlanet = bind(this.drawPlanet, this);
  }

  Planet.prototype.drawPlanet = function(planet) {
    var geometry, material, radius, rings, segments, texture;
    radius = planet.radius;
    segments = 16;
    rings = 16;
    texture = THREE.ImageUtils.loadTexture(planet.imageLocation);
    texture.repeat.set(1, 1);
    geometry = new THREE.SphereGeometry(radius, segments, rings);
    material = new THREE.MeshLambertMaterial({
      map: texture,
      emissive: 0x000000
    });
    this.mesh = new THREE.Mesh(geometry, material);
    this.mesh.position.x = planet.position.x;
    this.mesh.position.y = planet.position.y;
    return this.scene.add(this.mesh);
  };

  return Planet;

})();

Sun = (function(superClass) {
  extend(Sun, superClass);

  function Sun(scene1) {
    this.scene = scene1;
    this.animate = bind(this.animate, this);
    Sun.__super__.constructor.call(this, this.scene);
    this.planet = {
      name: 'Sun',
      imageLocation: 'img/sun.jpg',
      radius: 80.0,
      position: {
        x: 0,
        y: 0,
        z: 0
      },
      rotation: {
        x: 0,
        y: 0.001,
        z: 0
      }
    };
    this.drawPlanet(this.planet);
  }

  Sun.prototype.animate = function() {
    this.mesh.rotation.x += this.planet.rotation.x;
    return this.mesh.rotation.y += this.planet.rotation.y;
  };

  return Sun;

})(Planet);

Earth = (function(superClass) {
  extend(Earth, superClass);

  function Earth(scene1) {
    this.scene = scene1;
    this.animate = bind(this.animate, this);
    Earth.__super__.constructor.call(this, this.scene);
    this.planet = {
      name: 'Earth',
      imageLocation: 'img/earth.jpg',
      radius: 20,
      position: {
        x: 400,
        y: 0,
        z: 400
      },
      rotation: {
        x: 0,
        y: 0.01,
        z: 0
      }
    };
    this.drawPlanet(this.planet);
  }

  Earth.prototype.animate = function() {
    this.mesh.rotation.x += this.planet.rotation.x;
    return this.mesh.rotation.y += this.planet.rotation.y;
  };

  return Earth;

})(Planet);

//# sourceMappingURL=data:application/json;base64,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WyJjbGFzcyBHcmlkT2JqZWN0XG4gIGNvbnN0cnVjdG9yOiAoc2NlbmUpLT5cbiAgICAjIEdyaWRcbiAgICBzaXplID0gNTAwXG4gICAgc3RlcCA9IDUwXG4gICAgZ2VvbWV0cnkgPSBuZXcgKFRIUkVFLkdlb21ldHJ5KVxuICAgIGkgPSAtc2l6ZVxuICAgIHdoaWxlIGkgPD0gc2l6ZVxuICAgICAgZ2VvbWV0cnkudmVydGljZXMucHVzaCBuZXcgKFRIUkVFLlZlY3RvcjMpKC1zaXplLCAtMTAwLCBpKVxuICAgICAgZ2VvbWV0cnkudmVydGljZXMucHVzaCBuZXcgKFRIUkVFLlZlY3RvcjMpKHNpemUsIC0xMDAsIGkpXG4gICAgICBnZW9tZXRyeS52ZXJ0aWNlcy5wdXNoIG5ldyAoVEhSRUUuVmVjdG9yMykoaSwgLTEwMCwgLXNpemUpXG4gICAgICBnZW9tZXRyeS52ZXJ0aWNlcy5wdXNoIG5ldyAoVEhSRUUuVmVjdG9yMykoaSwgLTEwMCwgc2l6ZSlcbiAgICAgIGkgKz0gc3RlcFxuICAgIG1hdGVyaWFsID0gbmV3IChUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCkoXG4gICAgICBjb2xvcjogMHhmZmZmZmZcbiAgICAgIG9wYWNpdHk6IDAuMilcbiAgICBsaW5lID0gbmV3IChUSFJFRS5MaW5lU2VnbWVudHMpKGdlb21ldHJ5LCBtYXRlcmlhbClcbiAgICBzY2VuZS5hZGQgbGluZVxuXG5jbGFzcyBQbGFuZXRcbiAgY29uc3RydWN0b3I6IChAc2NlbmUpIC0+XG5cbiAgZHJhd1BsYW5ldDogKHBsYW5ldCkgPT5cbiAgICAjIHNldCB1cCB0aGUgc3BoZXJlIHZhcnNcbiAgICByYWRpdXMgPSBwbGFuZXQucmFkaXVzXG4gICAgc2VnbWVudHMgPSAxNlxuICAgIHJpbmdzID0gMTZcbiAgICAjIGNyZWF0ZSB0ZXh0dXJlXG4gICAgdGV4dHVyZSA9IFRIUkVFLkltYWdlVXRpbHMubG9hZFRleHR1cmUocGxhbmV0LmltYWdlTG9jYXRpb24pXG4gICAgdGV4dHVyZS5yZXBlYXQuc2V0KDEsIDEpO1xuICAgICMgY3JlYXRlIGEgbmV3IG1lc2ggd2l0aCBzcGhlcmUgZ2VvbWV0cnlcbiAgICBnZW9tZXRyeSA9IG5ldyAoVEhSRUUuU3BoZXJlR2VvbWV0cnkpKHJhZGl1cywgc2VnbWVudHMsIHJpbmdzKVxuICAgIG1hdGVyaWFsID0gbmV3IChUSFJFRS5NZXNoTGFtYmVydE1hdGVyaWFsKShcbiAgICAgIG1hcDogdGV4dHVyZSxcbiAgICAgICNjb2xvcjogMHgyMTk0Y2UsXG4gICAgICBlbWlzc2l2ZTogMHgwMDAwMDApXG4gICAgQG1lc2ggPSBuZXcgKFRIUkVFLk1lc2gpKGdlb21ldHJ5LCBtYXRlcmlhbClcbiAgICBAbWVzaC5wb3NpdGlvbi54ID0gcGxhbmV0LnBvc2l0aW9uLnhcbiAgICBAbWVzaC5wb3NpdGlvbi55ID0gcGxhbmV0LnBvc2l0aW9uLnlcbiAgICBAc2NlbmUuYWRkIEBtZXNoXG5cbmNsYXNzIFN1biBleHRlbmRzIFBsYW5ldFxuICBjb25zdHJ1Y3RvcjogKEBzY2VuZSktPlxuICAgIHN1cGVyKEBzY2VuZSlcbiAgICBAcGxhbmV0ID1cbiAgICAgIG5hbWU6ICdTdW4nXG4gICAgICBpbWFnZUxvY2F0aW9uOiAnaW1nL3N1bi5qcGcnXG4gICAgICByYWRpdXM6IDgwLjBcbiAgICAgIHBvc2l0aW9uOlxuICAgICAgICB4OiAwXG4gICAgICAgIHk6IDBcbiAgICAgICAgejogMFxuICAgICAgcm90YXRpb246XG4gICAgICAgIHg6IDBcbiAgICAgICAgeTogMC4wMDFcbiAgICAgICAgejogMFxuICAgIEBkcmF3UGxhbmV0KEBwbGFuZXQpXG5cbiAgYW5pbWF0ZTogPT5cbiAgICBAbWVzaC5yb3RhdGlvbi54ICs9IEBwbGFuZXQucm90YXRpb24ueFxuICAgIEBtZXNoLnJvdGF0aW9uLnkgKz0gQHBsYW5ldC5yb3RhdGlvbi55XG5cbmNsYXNzIEVhcnRoIGV4dGVuZHMgUGxhbmV0XG4gIGNvbnN0cnVjdG9yOiAoQHNjZW5lKS0+XG4gICAgc3VwZXIoQHNjZW5lKVxuICAgIEBwbGFuZXQgPVxuICAgICAgbmFtZTogJ0VhcnRoJ1xuICAgICAgaW1hZ2VMb2NhdGlvbjogJ2ltZy9lYXJ0aC5qcGcnXG4gICAgICByYWRpdXM6IDIwXG4gICAgICBwb3NpdGlvbjpcbiAgICAgICAgeDogNDAwXG4gICAgICAgIHk6IDBcbiAgICAgICAgejogNDAwXG4gICAgICByb3RhdGlvbjpcbiAgICAgICAgeDogMFxuICAgICAgICB5OiAwLjAxXG4gICAgICAgIHo6IDBcbiAgICBAZHJhd1BsYW5ldChAcGxhbmV0KVxuXG4gIGFuaW1hdGU6ID0+XG4gICAgQG1lc2gucm90YXRpb24ueCArPSBAcGxhbmV0LnJvdGF0aW9uLnhcbiAgICBAbWVzaC5yb3RhdGlvbi55ICs9IEBwbGFuZXQucm90YXRpb24ueVxuIl19

var SolarSystem,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

SolarSystem = (function() {
  function SolarSystem() {
    this.render = bind(this.render, this);
    this.animate = bind(this.animate, this);
    this.animateLoop = [];
    this.scene = new THREE.Scene;
    this.camera = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, -500, 1000);
    this.renderer = new THREE.WebGLRenderer;
    this.renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(this.renderer.domElement);
    this.controls = new THREE.OrbitControls(this.camera);
  }

  SolarSystem.prototype.init = function() {
    this.cameraSetup();
    this.lighting();
    this.animate();
    this.buildModels();
    return this.controlsSetup();
  };

  SolarSystem.prototype.lighting = function() {
    var ambientlight;
    ambientlight = new THREE.AmbientLight(0xffffff);
    return this.scene.add(ambientlight);
  };

  SolarSystem.prototype.cameraSetup = function() {
    this.camera.position.x = 200;
    this.camera.position.y = 100;
    this.camera.position.z = 200;
    return this.camera.lookAt(this.scene.position);
  };

  SolarSystem.prototype.controlsSetup = function() {
    this.controls.minDistance = 100;
    return this.controls.maxDistance = 200;
  };

  SolarSystem.prototype.buildModels = function() {
    this.animateLoop.push(new GridObject(this.scene));
    this.animateLoop.push(new Sun(this.scene));
    return this.animateLoop.push(new Earth(this.scene));
  };

  SolarSystem.prototype.animate = function() {
    var a, i, len, ref, timer;
    requestAnimationFrame(this.animate);
    timer = Date.now() * 0.0001;
    ref = this.animateLoop;
    for (i = 0, len = ref.length; i < len; i++) {
      a = ref[i];
      if (typeof a.animate === "function") {
        a.animate();
      }
    }
    this.controls.update();
    return this.render();
  };

  SolarSystem.prototype.render = function() {
    return this.renderer.render(this.scene, this.camera);
  };

  return SolarSystem;

})();

//# sourceMappingURL=data:application/json;base64,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Q0FBQSxNQUExQjtFQURNIiwiZmlsZSI6InNvbGFyU3lzdGVtLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU29sYXJTeXN0ZW1cblxuICBjb25zdHJ1Y3RvcjogLT5cbiAgICBAYW5pbWF0ZUxvb3AgPSBbXVxuICAgIEBzY2VuZSA9IG5ldyAoVEhSRUUuU2NlbmUpXG4gICAgQGNhbWVyYSA9IG5ldyAoVEhSRUUuT3J0aG9ncmFwaGljQ2FtZXJhKSh3aW5kb3cuaW5uZXJXaWR0aCAvIC0yLCB3aW5kb3cuaW5uZXJXaWR0aCAvIDIsIHdpbmRvdy5pbm5lckhlaWdodCAvIDIsIHdpbmRvdy5pbm5lckhlaWdodCAvIC0yLCAtNTAwLCAxMDAwKVxuICAgIEByZW5kZXJlciA9IG5ldyAoVEhSRUUuV2ViR0xSZW5kZXJlcilcbiAgICBAcmVuZGVyZXIuc2V0U2l6ZSB3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCBAcmVuZGVyZXIuZG9tRWxlbWVudFxuICAgIEBjb250cm9scyA9IG5ldyAoVEhSRUUuT3JiaXRDb250cm9scykoIEBjYW1lcmEgKVxuXG4gIGluaXQ6IC0+XG4gICAgI0BsaWdodGluZygpXG4gICAgQGNhbWVyYVNldHVwKClcbiAgICBAbGlnaHRpbmcoKVxuICAgIEBhbmltYXRlKClcbiAgICBAYnVpbGRNb2RlbHMoKVxuICAgIEBjb250cm9sc1NldHVwKClcblxuICBsaWdodGluZzogLT5cbiAgICAjcG9pbnRMaWdodCA9IG5ldyAoVEhSRUUuUG9pbnRMaWdodCkoMHhGRkZGRkYpXG4gICAgI3BvaW50TGlnaHQucG9zaXRpb24ueCA9IDBcbiAgICAjcG9pbnRMaWdodC5wb3NpdGlvbi55ID0gMFxuICAgICNwb2ludExpZ2h0LnBvc2l0aW9uLnogPSAwXG4gICAgI0BzY2VuZS5hZGQgcG9pbnRMaWdodFxuICAgICMgYWRkIHRvIHRoZSBzY2VuZVxuICAgIGFtYmllbnRsaWdodCA9IG5ldyBUSFJFRS5BbWJpZW50TGlnaHQoIDB4ZmZmZmZmIClcbiAgICBAc2NlbmUuYWRkIGFtYmllbnRsaWdodFxuXG4gIGNhbWVyYVNldHVwOiAtPlxuICAgIEBjYW1lcmEucG9zaXRpb24ueCA9IDIwMFxuICAgIEBjYW1lcmEucG9zaXRpb24ueSA9IDEwMFxuICAgIEBjYW1lcmEucG9zaXRpb24ueiA9IDIwMFxuICAgIEBjYW1lcmEubG9va0F0KCBAc2NlbmUucG9zaXRpb24gKTtcblxuICBjb250cm9sc1NldHVwOiAtPlxuICAgIEBjb250cm9scy5taW5EaXN0YW5jZSA9IDEwMFxuICAgIEBjb250cm9scy5tYXhEaXN0YW5jZSA9IDIwMFxuXG4gIGJ1aWxkTW9kZWxzOiAtPlxuICAgIEBhbmltYXRlTG9vcC5wdXNoIG5ldyBHcmlkT2JqZWN0KEBzY2VuZSlcbiAgICBAYW5pbWF0ZUxvb3AucHVzaCBuZXcgU3VuKEBzY2VuZSlcbiAgICBAYW5pbWF0ZUxvb3AucHVzaCBuZXcgRWFydGgoQHNjZW5lKVxuXG4gIGFuaW1hdGU6ID0+XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lIHRoaXMuYW5pbWF0ZVxuICAgIHRpbWVyID0gRGF0ZS5ub3coKSAqIDAuMDAwMVxuICAgIGEuYW5pbWF0ZT8oKSBmb3IgYSBpbiBAYW5pbWF0ZUxvb3BcbiAgICAjY2FtZXJhLnBvc2l0aW9uLnggPSBNYXRoLmNvcyggdGltZXIgKSAqIDIwMDtcbiAgICAjQGNhbWVyYS5wb3NpdGlvbi56ID0gTWF0aC5zaW4oIHRpbWVyICkgKiAyMDA7XG4gICAgI0BjYW1lcmEubG9va0F0KCBAc2NlbmUucG9zaXRpb24gKTtcbiAgICBAY29udHJvbHMudXBkYXRlKCk7XG4gICAgQHJlbmRlcigpXG5cbiAgcmVuZGVyOiA9PlxuICAgIEByZW5kZXJlci5yZW5kZXIgQHNjZW5lLCBAY2FtZXJhXG4iXX0=
